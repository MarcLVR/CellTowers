[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nile Tower Coverage Analysis",
    "section": "",
    "text": "# üìö Cargar librer√≠as necesarias\nlibrary(leaflet)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(sf)\n\nLinking to GEOS 3.13.1, GDAL 3.11.0, PROJ 9.6.0; sf_use_s2() is TRUE\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAdjuntando el paquete: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(units)\n\nudunits database from C:/Users/marc/AppData/Local/R/win-library/4.5/units/share/udunits/udunits2.xml\n\nlibrary(giscoR)\nlibrary(scales)\nlibrary(plotly)\n\n\nAdjuntando el paquete: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# üì• Cargar y preparar datos\ndf2 &lt;- read.csv(\"C:/Users/marc/Desktop/UOC/DataViz/P2/Africa towers.csv\")\ndf_egypt &lt;- df2[df2$Country == \"Egypt\", ]\ndf_egypt &lt;- df_egypt[df_egypt$LON &gt;= 30.6 & df_egypt$LON &lt;= 33.2, ]\ndf_egypt &lt;- df_egypt[, !(names(df_egypt) %in% c(\"created\", \"updated\", \"averageSignal\", \"Continent\"))]\n\n# üìà Cargar gr√°ficos desde archivo externo\nsource(\"plots.R\")"
  },
  {
    "objectID": "index.html#torres-por-rango",
    "href": "index.html#torres-por-rango",
    "title": "Nile Tower Coverage Analysis",
    "section": "üìä Torres por rango",
    "text": "üìä Torres por rango\n\nplot_rango"
  },
  {
    "objectID": "index.html#porcentaje-por-tipo-de-radio",
    "href": "index.html#porcentaje-por-tipo-de-radio",
    "title": "Nile Tower Coverage Analysis",
    "section": "üì∂ Porcentaje por tipo de radio",
    "text": "üì∂ Porcentaje por tipo de radio\n\nplot_radio"
  },
  {
    "objectID": "index.html#top-10-cids",
    "href": "index.html#top-10-cids",
    "title": "Nile Tower Coverage Analysis",
    "section": "üè¢ Top 10 CIDs",
    "text": "üè¢ Top 10 CIDs\n\nplot_cid"
  },
  {
    "objectID": "index.html#porcentaje-por-operador-de-red",
    "href": "index.html#porcentaje-por-operador-de-red",
    "title": "Nile Tower Coverage Analysis",
    "section": "üõ∞Ô∏è Porcentaje por operador de red",
    "text": "üõ∞Ô∏è Porcentaje por operador de red\n\nplot_network"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "CellTowers.html",
    "href": "CellTowers.html",
    "title": "CellTowers",
    "section": "",
    "text": "#install.packages(\"openxlsx\")\n#install.packages(\"readxl\")\n#install.packages(\"leaflet\")  \n#install.packages(\"sf\")\n#install.packages(\"dplyr\")\n#install.packages(\"ggplot2\")\n#install.packages(\"giscoR\")\n#install.packages(\"scales\")  # solo la primera vez\n#install.packages(\"quarto\")\nlibrary(leaflet)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(sf)\n\nLinking to GEOS 3.13.1, GDAL 3.11.0, PROJ 9.6.0; sf_use_s2() is TRUE\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAdjuntando el paquete: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(units)\n\nudunits database from C:/Users/marc/AppData/Local/R/win-library/4.5/units/share/udunits/udunits2.xml\n\nlibrary(giscoR)\nlibrary(scales)\nlibrary(plotly);library(quarto)\n\n\nAdjuntando el paquete: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout"
  },
  {
    "objectID": "CellTowers.html#r-markdown",
    "href": "CellTowers.html#r-markdown",
    "title": "CellTowers",
    "section": "R Markdown",
    "text": "R Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\ndf &lt;- read.csv(\"C:/Users/marc/Desktop/UOC/DataViz/P2/602.csv\", header = FALSE)\n\n\ndf2 &lt;- read.csv(\"C:/Users/marc/Desktop/UOC/DataViz/P2/Africa towers.csv\")\n#rm(df2)\n\n\ndf_egypt &lt;- df2[df2$Country == \"Egypt\", ]\n\n\ndf_egypt &lt;- df_egypt[df_egypt$LON &gt;= 30.6 & df_egypt$LON &lt;= 33.2, ]\ndf_egypt &lt;- df_egypt[, !(names(df_egypt) %in% c(\"created\", \"updated\", \"averageSignal\", \"Continent\"))]\n\n\n# Paso 1: Agrupar en intervalos\nplot_rango &lt;- df_egypt %&gt;%\n  mutate(RangeGroup = cut(RANGE,\n                          breaks = c(0, 500, 1000, 2000, 5000, 10000, Inf),\n                          labels = c(\"0‚Äì500\", \"501‚Äì1000\", \"1001‚Äì2000\", \"2001‚Äì5000\", \"5001‚Äì10000\", \"10001+\"),\n                          right = TRUE)) %&gt;%\n  count(RangeGroup) %&gt;%\n  ggplot(aes(x = RangeGroup, y = n, text = paste(\"N√∫mero de torres:\", n))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"N√∫mero de torres por rango de cobertura\",\n       x = \"Rango de cobertura (m)\",\n       y = \"N√∫mero de torres\") +\n  theme_minimal()\n\n# Convertir a gr√°fico interactivo\nggplotly(plot_rango, tooltip = \"text\")\n\n\n\n\n\n\n# Crear gr√°fico con ggplot2\nplot_radio &lt;- df_egypt %&gt;%\n  count(radio) %&gt;%\n  mutate(percentage = n / sum(n)) %&gt;%\n  ggplot(aes(x = reorder(radio, -percentage),\n             y = percentage,\n             text = paste0(\"Radio: \", radio,\n                           \"&lt;br&gt;N√∫mero de torres: \", n,\n                           \"&lt;br&gt;Porcentaje: \", percent(percentage, accuracy = 0.1)))) +\n  geom_bar(stat = \"identity\", fill = \"darkgreen\") +\n  scale_y_continuous(labels = percent_format()) +\n  labs(title = \"Porcentaje de torres por tipo de radio\",\n       x = \"Tipo de radio\",\n       y = \"Porcentaje\") +\n  theme_minimal()\n\n# Convertir a gr√°fico interactivo\nggplotly(plot_radio, tooltip = \"text\")\n\n\n\n\n\n\nplot_cid &lt;- df_egypt %&gt;%\n  count(CID) %&gt;%\n  top_n(10, n) %&gt;%\n  mutate(percentage = n / sum(n)) %&gt;%\n  ggplot(aes(x = reorder(as.factor(CID), -percentage),\n             y = percentage,\n             text = paste0(\"CID: \", CID,\n                           \"&lt;br&gt;N√∫mero de torres: \", n,\n                           \"&lt;br&gt;Porcentaje: \", percent(percentage, accuracy = 0.1)))) +\n  geom_bar(stat = \"identity\", fill = \"purple\") +\n  scale_y_continuous(labels = percent_format()) +\n  labs(title = \"Top 10 CIDs con m√°s torres\",\n       x = \"CID\",\n       y = \"Porcentaje\") +\n  theme_minimal()\n\nggplotly(plot_cid, tooltip = \"text\")\n\n\n\n\n\n\nplot_network &lt;- df_egypt %&gt;%\n  count(Network) %&gt;%\n  mutate(percentage = n / sum(n)) %&gt;%\n  ggplot(aes(x = reorder(Network, -percentage),\n             y = percentage,\n             fill = Network,\n             text = paste0(\"Operador: \", Network,\n                           \"&lt;br&gt;N√∫mero de torres: \", n,\n                           \"&lt;br&gt;Porcentaje: \", percent(percentage, accuracy = 0.1)))) +\n  geom_bar(stat = \"identity\") +\n  scale_y_continuous(labels = percent_format()) +\n  labs(title = \"Porcentaje de torres por operador de red\",\n       x = \"Operador\",\n       y = \"Porcentaje\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Oculta leyenda redundante\n\nggplotly(plot_network, tooltip = \"text\")"
  }
]